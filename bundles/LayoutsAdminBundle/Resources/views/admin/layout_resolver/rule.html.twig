{% import '@NetgenLayoutsAdmin/admin/macros.html.twig' as macros %}

{% trans_default_domain 'nglayouts_admin' %}

{% set target_types = nglayouts.config.parameter('target_types') %}
{% set condition_types = nglayouts.config.parameter('condition_types') %}

{% set target_type_identifier = rule.targets is not empty ? rule.targets[0].targetType.type : '' %}
{% if not target_types[target_type_identifier] is defined %}
    {% set target_type_identifier = 'null' %}
{% endif %}

{% set can_edit = is_granted('nglayouts:mapping:edit') %}
{% set can_activate = is_granted('nglayouts:mapping:activate') %}
{% set can_delete = is_granted('nglayouts:mapping:delete') %}

<div class="nl-rule-cell">
    <div class="nl-export-checkbox">
        <input type="checkbox" id="export{{ rule.id.toString }}" {% if not rule.published %}disabled{% endif %}>
        <label for="export{{ rule.id.toString }}"></label>
    </div>
</div>
<div class="rule-priority"></div>
<div class="nl-rule-content
    {% if not rule.enabled %}disabled{% endif %}"
    data-id="{{ rule.id.toString }}"
    data-target-type="{{ target_type_identifier }}"
    data-layout-id="{% if rule.layout is not empty %}{{ rule.layout.id.toString }}{% endif %}"
    data-group-id="{{ rule.ruleGroupId.toString }}"
    >

    <div class="nl-rule-head">
        <div class="nl-rule-cell rule-layout">

            {% if rule.layout is not empty %}
                {{ rule.layout.name }}
            {% else %}
                <div class="no-layout" title="{{ 'layout_resolver.rule.no_mapped_layout'|trans }}">
                    <span>{{ 'layout_resolver.rule.no_mapped_layout'|trans }}</span>
                    {% if can_edit %}
                        <a class="js-link-layout" data-browser-item-type="layout" href="#">
                            <i class="material-icons" role="presentation">link</i> {{ 'layout_resolver.rule.no_mapped_layout.link'|trans }}
                        </a>
                    {% endif %}
                </div>
            {% endif %}

        </div>
        <div class="nl-rule-cell rule-targets">
            {% if rule.targets is not empty %}
                {% if target_type_identifier is same as('null') %}
                    <p>{{ ('layout_resolver.target.null')|trans({}, 'nglayouts') }}</p>
                {% elseif rule.targets|length == 1 %}
                    <p>{{ ('layout_resolver.target.' ~ target_type_identifier)|trans({}, 'nglayouts') }}:</p>
                    <ul>
                        {% for target in rule.targets %}
                            <li {% if rule_count == 1 and (target_type_identifier == 'ez_location' or target_type_identifier == 'ez_content') %}class="unique"{% endif %}>
                                {{ nglayouts_render_rule_target(target, {}, 'value') }}
                            </li>
                        {% endfor %}
                    </ul>
                {% else %}
                    <p>{{ ('layout_resolver.target.' ~ target_type_identifier)|trans({}, 'nglayouts') }} ({{ rule.targets|length }})</p>
                {% endif %}
            {% endif %}
        </div>
        <div class="nl-rule-cell rule-conditions">
            {% if rule.conditions is not empty %}
                <ul class="{% if rule.conditions|length == 2 %}nl-ellipsis{% elseif rule.conditions|length > 2 %}nl-inline{% endif %}">
                    {% for condition in rule.conditions %}
                        {% if condition_types[condition.conditionType.type] is defined %}
                            <li>{{ ('layout_resolver.condition.' ~ condition.conditionType.type)|trans({}, 'nglayouts') }}{% if rule.conditions|length <= 2 %}: {{ nglayouts_render_rule_condition(condition, {}, 'value') }}{% endif %}</li>
                        {% endif %}
                    {% endfor %}
                </ul>
            {% endif %}
        </div>

        {% if not rule.enabled %}
            <div class="nl-rule-cell">
                <span class="disabled-label">{{ 'layout_resolver.rule.inactive'|trans }}</span>
            </div>
        {% endif %}

        <div class="nl-rule-cell rule-details js-toggle-body">
            {{ 'layout_resolver.rule.details'|trans }}
        </div>

        <div class="nl-dropdown" data-position="right">
            <button class="nl-btn nl-dropdown-toggle">
                <i class="material-icons">more_horiz</i>
            </button>
            <ul class="nl-dropdown-menu">
                {% if can_edit %}
                    <li><a href="#" {% if rule.layout is empty %} disabled {% else %} class="js-rule-unlink" {% endif %}>{{ 'layout_resolver.rule.unlink_layout'|trans }}</a></li>

                    <li><a href="#" class="js-rule-edit-rule">{{ 'layout_resolver.rule.edit_rule'|trans }}</a></li>

                    <li><a href="#" class="js-rule-copy-rule">{{ 'layout_resolver.rule.copy_rule'|trans }}</a></li>

                    <li>
                        <a class="js-link-layout" {% if rule.layout is not empty %}data-linked-layout="{{ rule.layout.id.toString }}"{% endif %} data-browser-item-type="layout" href="#">
                            {% if rule.layout is not empty %}
                                {{ 'layout_resolver.rule.link_other_layout'|trans }}
                            {% else %}
                                {{ 'layout_resolver.rule.link_layout'|trans }}
                            {% endif %}
                        </a>
                    </li>
                {% endif %}

                {% if can_activate %}
                    {% if rule.enabled %}
                        <li><a href="#" {% if not rule.published %} disabled {% else %} class="js-rule-edit" data-action="disable" {% endif %}>{{ 'layout_resolver.rule.disable_rule'|trans }}</a></li>
                    {% else %}
                        <li><a href="#" {% if not rule.published %} disabled {% else %} class="js-rule-edit" data-action="enable" {% endif %}>{{ 'layout_resolver.rule.enable_rule'|trans }}</a></li>
                    {% endif %}
                {% endif %}

                {% if can_delete %}
                    <li><a href="#" class="js-rule-delete">{{ 'layout_resolver.rule.delete_rule'|trans }}</a></li>
                {% endif %}

                {% if rule.layout is empty or not rule.layout.published or is_granted('nglayouts:layout:clear_cache', rule.layout) %}
                    <li>
                        <button class="js-layout-clear-cache" {% if rule.layout is empty or not rule.layout.published or not http_cache_enabled %}disabled="disabled"{% endif %}>
                            {{ 'layouts.layout.clear_cache'|trans }}
                        </button>
                    </li>
                {% endif %}

                {{ nglayouts_template_plugin('admin.rule.controls') }}
            </ul>
        </div>

    </div>

    {% if rule.comment is not empty %}
        <div class="nl-rule-description">
            {{ rule.comment }}
        </div>
    {% endif %}

    <div class="nl-rule-body">

        <div class="nl-grid">
            <div class="col-xs3">
                <h4>{{ 'layout_resolver.rule.mapped_layout'|trans }}:</h4>
                {% if rule.layout is not empty %}
                    <div class="rule-layout-info">
                        {% if rule.layout.layoutType.zones is not empty %}
                            <div class="rule-layout-info-icon">
                                <i class="layout-icon {{ rule.layout.layoutType.identifier }}" {% if rule.layout.layoutType.icon is not null %}style="background-image:url({{ asset(rule.layout.layoutType.icon) }})"{% endif %}></i>
                            </div>
                            <div class="rule-layout-info-text">
                                <p><strong>{{ rule.layout.name }}</strong></p>
                                <p>{{ rule.layout.description }}</p>
                                {% if is_granted('nglayouts:layout:edit', rule.layout) %}
                                    <a href="{{ macros.layout_path(rule.layout.id.toString) }}" class="js-open-ngl">{{ 'layout_resolver.rule.edit_layout'|trans }}</a>
                                {% endif %}
                            </div>
                        {% else %}
                            <div class="rule-layout-info-text">
                                <p><strong>{{ rule.layout.name }}</strong></p>
                                <p>{{ 'layouts.layout.invalid_layout'|trans }}</p>
                            </div>
                        {% endif %}
                    </div>
                {% else %}
                    <div class="panel-name" title="{{ 'layout_resolver.rule.no_mapped_layout'|trans }}">
                        <p>{{ 'layout_resolver.rule.no_mapped_layout'|trans }}</p>
                        {% if can_edit %}
                            <a class="js-link-layout" data-browser-item-type="layout" href="#">{{ 'layout_resolver.rule.link_layout'|trans }}</a>
                        {% endif %}
                    </div>
                {% endif %}
            </div>
            <div class="col-xs9">
                <div class="nl-grid">
                    <div class="col-xs6">
                        {% if rule.targets is not empty %}
                            {% if target_type_identifier is not same as('null') %}
                                <h4>{{ ('layout_resolver.rule.target_header.' ~ target_type_identifier)|trans }}:</h4>
                            {% endif %}

                            <ul class="settings-list target-list">
                                {% for target in rule.targets %}
                                    <li>{{ nglayouts_render_rule_target(target) }}</li>
                                {% endfor %}
                            </ul>
                        {% else %}
                            <h4>{{ 'layout_resolver.rule.no_targets'|trans }}</h4>
                        {% endif %}

                        {% if target_types is not empty %}
                            {% if can_edit %}
                                <div class="settings-action">
                                    <div class="settings-loader"><i class="loading-ng-icon"></i>{{ 'layout_resolver.rule.loading'|trans }}</div>
                                    <div class="settings-action-add">
                                        {% if rule.targets is empty %}
                                            <select class="nl-select js-target-type">
                                                {% for target_type in target_types %}
                                                    <option value="{{ target_type.type }}">{{ ('layout_resolver.target.' ~ target_type.type)|trans({}, 'nglayouts') }}</option>
                                                {% endfor %}
                                            </select>
                                        {% endif %}

                                        {% if rule.targets is empty or target_type_identifier is not same as('null') %}
                                            <a href="#" class="nl-btn nl-btn-link js-setting-add" data-action="add-target"
                                                {% if rule.targets is not empty %} data-target-type="{{ target_type_identifier }}" {% endif %}>
                                                <i class="material-icons">add</i> {{ 'layout_resolver.rule.add_target'|trans }}
                                            </a>
                                        {% endif %}
                                    </div>
                                </div>
                            {% endif %}
                        {% endif %}
                        <p class="note">{{ 'layout_resolver.targets.notice'|trans|raw }}</p>
                    </div>

                    <div class="col-xs6">
                        {% if rule.conditions is not empty %}
                            <h4>{{ 'layout_resolver.rule.conditions'|trans }}:</h4>

                            <ul class="settings-list condition-list">
                                {% for condition in rule.conditions %}
                                    <li>{{ nglayouts_render_rule_condition(condition) }}</li>
                                {% endfor %}
                            </ul>
                        {% else %}
                            <h4>{{ 'layout_resolver.rule.no_conditions'|trans }}</h4>
                        {% endif %}

                        {% if condition_types is not empty %}
                            {% if can_edit %}
                                <div class="settings-action">
                                    <div class="settings-loader"><i class="loading-ng-icon"></i>{{ 'layout_resolver.rule.loading'|trans }}</div>
                                    <div class="settings-action-add">
                                        <select class="nl-select js-condition-type">
                                            {% for condition_type in condition_types %}
                                                <option value="{{ condition_type.type }}">{{ ('layout_resolver.condition.' ~ condition_type.type)|trans({}, 'nglayouts') }}</option>
                                            {% endfor %}
                                        </select>

                                        <a href="#" class="nl-btn nl-btn-link js-setting-add" data-action="add-condition">
                                            <i class="material-icons">add</i> {{ 'layout_resolver.rule.add_condition'|trans }}
                                        </a>
                                    </div>
                                </div>
                            {% endif %}
                        {% endif %}
                        <p class="note">{{ 'layout_resolver.conditions.notice'|trans|raw }}</p>
                    </div>
                </div>
            </div>
        </div>

    </div>

    {% if can_edit %}
        <div class="nl-rule-actions">
            <a href="#" class="nl-btn js-rule-edit" data-action="discard">
                {{ 'layout_resolver.rule.cancel'|trans }}
            </a>

            <a href="#" class="nl-btn nl-btn-primary js-rule-edit" data-action="publish">
                {{ 'layout_resolver.rule.save_changes'|trans }}
            </a>
        </div>
    {% endif %}

</div>

includes:
    - vendor/phpstan/phpstan-strict-rules/rules.neon

parameters:
    ignoreErrors:
        # Symfony Config component
        - '#Call to an undefined method Symfony\\Component\\Config\\Definition\\Builder\\NodeDefinition::requiresAtLeastOneElement\(\)#'
        - '#Call to an undefined method Symfony\\Component\\Config\\Definition\\Builder\\NodeDefinition::addDefaultsIfNotSet\(\)#'
        - '#Call to an undefined method Symfony\\Component\\Config\\Definition\\Builder\\NodeDefinition::children\(\)#'

        # Doctrine DBAL
        - '#Cannot call method fetchAll\(\) on Doctrine\\DBAL\\Driver\\Statement\|int#'
        - '#expects string\|null, Doctrine\\DBAL\\Query\\Expression\\CompositeExpression given#'

        # Compatibility with Symfony 3.4
        -
            message: '#Call to function is_callable\(\) with .+ will always evaluate to false.#'
            path: lib/Utils/BackwardsCompatibility/TreeBuilder.php
        -
            message: '#Call to an undefined method Symfony\\Component\\Intl\\ResourceBundle\\LocaleBundleInterface::getAliases\(\)#'
            path: lib/Utils/BackwardsCompatibility/Locales.php
        -
            message: '/Parameter #1 \$event of method Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface::dispatch\(\) expects object, string given/'
            path: lib/Utils/BackwardsCompatibility/EventDispatcherProxy.php
        -
            message: '#Method Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface::dispatch\(\) invoked with 2 parameters, 1 required#'
            path: lib/Utils/BackwardsCompatibility/EventDispatcherProxy.php

        - '#Symfony\\Component\\ErrorRenderer\\Exception\\FlattenException#'

        # Compatibility with Symfony 4.4

        - '#Call to function method_exists\(\) with Symfony\\Component\\HttpKernel\\Event\\GetResponseForExceptionEvent#'

        # Netgen Layouts specifics

        - '#Property Netgen\\Layouts\\Persistence\\Values\\.+::\$\w+ \(int\) does not accept null.#'
        -
            message: '#Else branch is unreachable because ternary operator condition is always true.#'
            path: lib/Core/Validator/LayoutValidator.php

        - '#Call to function is_string\(\) with string will always evaluate to true.#'
        - '#Call to function is_array\(\) with array will always evaluate to true.#'
        - '#Instanceof between Netgen\\Layouts\\API\\Values\\ParameterStruct and Netgen\\Layouts\\API\\Values\\ParameterStruct will always evaluate to true.#'
        - '#Instanceof between Netgen\\Layouts\\Block\\BlockDefinitionInterface and Netgen\\Layouts\\Block\\BlockDefinitionInterface will always evaluate to true.#'

        -
            message: '#Variable property access on object.#'
            path: lib/Utils/Hydrator.php

        -
            message: '#should be contravariant with parameter \$value#'
            path: lib/Transfer/Output/Visitor/

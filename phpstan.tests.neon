includes:
    - vendor/phpstan/phpstan-strict-rules/rules.neon
    - vendor/phpstan/phpstan-symfony/extension.neon
    - vendor/phpstan/phpstan-symfony/rules.neon
    - vendor/phpstan/phpstan-phpunit/extension.neon
    - vendor/phpstan/phpstan-phpunit/rules.neon

parameters:
    treatPhpDocTypesAsCertain: false
    dynamicConstantNames:
        - Symfony\Component\HttpKernel\Kernel::VERSION_ID

    excludes_analyse:
        - tests/application/public/bundles/
        - tests/application/config/bootstrap.php

    ignoreErrors:
        # Doctrine DBAL
        -
            message: '#Cannot call method fetchAllAssociative\(\) on Doctrine\\DBAL\\ForwardCompatibility\\DriverStatement\|int#'
            path: tests/lib/Persistence/Doctrine/Helper/PositionHelperTest.php

        # Compatibility with Symfony 3.4

        - '#Method .+::createRequestEvent\(\) should return .+\\RequestEvent but returns .+\\GetResponseEvent.#'
        - '#Method .+::createResponseEvent\(\) should return .+\\ResponseEvent but returns .+\\FilterResponseEvent.#'
        - '#Method .+::createExceptionEvent\(\) should return .+\\ExceptionEvent but returns .+\\GetResponseForExceptionEvent.#'
        - '#Method .+::createViewEvent\(\) should return .+\\ViewEvent but returns .+\\GetResponseForControllerResultEvent.#'
        - '#Method .+::createTerminateEvent\(\) should return .+\\TerminateEvent but returns .+\\PostResponseEvent.#'

        # PHPUnit 8

        - "#Call to function method_exists\\(\\) with 'PHPUnit\\\\\\\\Framework\\\\\\\\Assert'#"
        - "#Call to function method_exists\\(\\) with 'Ramsey\\\\\\\\Uuid\\\\\\\\UuidFactoryInterface' and 'getValidator' will always evaluate to true.#"

        # Disable errors about missing value types in PHPUnit data providers

        - '#Method .+Test::\w+DataProvider\(\) return type has no value type specified in iterable type array.#'

        # Disable errors about values inferred from iterable typehints

        -
            message: '#Call to static method PHPUnit\\Framework\\Assert::assert\w+\(\) with .+ will always evaluate to true.#'
            path: tests/lib/Utils/DateTimeUtilsTest.php

        # Disable errors for various tests that verify values have correct types
        - '/Parameter \#1 \$\w+ of class .+ constructor expects array\<.+\>, array\<.+\|stdClass\> given./'
        - '/Parameter \#1 \$\w+ of method .+ expects array\<.+\>, array\(stdClass\) given./'
        - '/Parameter \#3 \$zoneMappings of method .+::validateChangeLayoutType\(\) expects array\<string, array\<string\>\>, array\<string, int\> given./'
